{"ast":null,"code":"var _jsxFileName = \"/Users/rafalskrzydelski/development/django/wealth_frontend/src/app/auth/components/LoginUser.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as api from '../../../api/api';\nimport { loginUrl } from '../../../api/routes';\nimport * as actions from '../duck/actions';\nimport { Container } from './styles';\nimport { loginLabels } from './labels';\nimport AuthForm from './AuthFrom';\n\nclass LoginUser extends Component {\n  constructor(props) {\n    super(props);\n    this.onHandleLogin = this.onHandleLogin.bind(this);\n    console.log(props);\n  }\n\n  async onHandleLogin(value) {\n    const onAppAuthChangeInfo = this.props.onAppAuthChangeInfo;\n    const res = await api.post(loginUrl(), value);\n    console.log(value);\n\n    if (Boolean(res.token)) {\n      localStorage.setItem('token', res.token);\n      localStorage.setItem('username', res.user.username);\n      localStorage.setItem('email', res.user.email);\n      this.props.loginSuccess();\n    } else if (Boolean(res.non_field_errors)) {\n      localStorage.clear();\n      this.props.loginFailure();\n      alert(res.non_field_errors);\n    }\n\n    if (onAppAuthChangeInfo !== undefined) {\n      onAppAuthChangeInfo();\n    }\n  }\n\n  render() {\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(AuthForm, {\n      title: \"Login\",\n      labels: loginLabels,\n      handleConfirm: this.onHandleLogin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {};\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    loginSuccess: () => dispatch(actions.loginSuccess()),\n    loginFailure: () => dispatch(actions.loginFailure())\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(LoginUser);","map":{"version":3,"sources":["/Users/rafalskrzydelski/development/django/wealth_frontend/src/app/auth/components/LoginUser.js"],"names":["React","Component","connect","api","loginUrl","actions","Container","loginLabels","AuthForm","LoginUser","constructor","props","onHandleLogin","bind","console","log","value","onAppAuthChangeInfo","res","post","Boolean","token","localStorage","setItem","user","username","email","loginSuccess","non_field_errors","clear","loginFailure","alert","undefined","render","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAO,KAAKC,GAAZ,MAAqB,kBAArB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAO,KAAKC,OAAZ,MAAyB,iBAAzB;AAEA,SAASC,SAAT,QAA0B,UAA1B;AACA,SAASC,WAAT,QAA4B,UAA5B;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,SAAN,SAAwBR,SAAxB,CAAkC;AAChCS,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAClB,UAAMA,KAAN;AACA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACD;;AAED,QAAMC,aAAN,CAAqBI,KAArB,EAA4B;AAAA,UAClBC,mBADkB,GACM,KAAKN,KADX,CAClBM,mBADkB;AAE1B,UAAMC,GAAG,GAAG,MAAMf,GAAG,CAACgB,IAAJ,CAASf,QAAQ,EAAjB,EAAqBY,KAArB,CAAlB;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;;AACA,QAAII,OAAO,CAACF,GAAG,CAACG,KAAL,CAAX,EAAwB;AACtBC,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BL,GAAG,CAACG,KAAlC;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCL,GAAG,CAACM,IAAJ,CAASC,QAA1C;AACAH,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BL,GAAG,CAACM,IAAJ,CAASE,KAAvC;AACA,WAAKf,KAAL,CAAWgB,YAAX;AACD,KALD,MAKO,IAAIP,OAAO,CAACF,GAAG,CAACU,gBAAL,CAAX,EAAmC;AACxCN,MAAAA,YAAY,CAACO,KAAb;AACA,WAAKlB,KAAL,CAAWmB,YAAX;AACAC,MAAAA,KAAK,CAACb,GAAG,CAACU,gBAAL,CAAL;AACD;;AAED,QAAIX,mBAAmB,KAAKe,SAA5B,EAAuC;AACrCf,MAAAA,mBAAmB;AACpB;AACF;;AAEDgB,EAAAA,MAAM,GAAI;AACR,WACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAC,OAAhB;AAAwB,MAAA,MAAM,EAAE1B,WAAhC;AAA6C,MAAA,aAAa,EAAE,KAAKK,aAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AAjC+B;;AAoClC,SAASsB,eAAT,CAA0BC,KAA1B,EAAiC;AAC/B,SAAO,EAAP;AAGD;;AAED,SAASC,kBAAT,CAA6BC,QAA7B,EAAuC;AACrC,SAAO;AACLV,IAAAA,YAAY,EAAE,MAAMU,QAAQ,CAAChC,OAAO,CAACsB,YAAR,EAAD,CADvB;AAELG,IAAAA,YAAY,EAAE,MAAMO,QAAQ,CAAChC,OAAO,CAACyB,YAAR,EAAD;AAFvB,GAAP;AAID;;AAED,eAAe5B,OAAO,CAAC,IAAD,EAAOkC,kBAAP,CAAP,CAAkC3B,SAAlC,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport * as api from '../../../api/api'\nimport { loginUrl } from '../../../api/routes'\nimport * as actions from '../duck/actions'\n\nimport { Container } from './styles'\nimport { loginLabels } from './labels'\nimport AuthForm from './AuthFrom'\n\nclass LoginUser extends Component {\n  constructor (props) {\n    super(props)\n    this.onHandleLogin = this.onHandleLogin.bind(this)\n    console.log(props)\n  }\n\n  async onHandleLogin (value) {\n    const { onAppAuthChangeInfo } = this.props\n    const res = await api.post(loginUrl(), value)\n    console.log(value)\n    if (Boolean(res.token)) {\n      localStorage.setItem('token', res.token)\n      localStorage.setItem('username', res.user.username)\n      localStorage.setItem('email', res.user.email)\n      this.props.loginSuccess()\n    } else if (Boolean(res.non_field_errors)) {\n      localStorage.clear()\n      this.props.loginFailure()\n      alert(res.non_field_errors)\n    }\n\n    if (onAppAuthChangeInfo !== undefined) {\n      onAppAuthChangeInfo()\n    }\n  }\n\n  render () {\n    return (\n      <Container>\n        <AuthForm title='Login' labels={loginLabels} handleConfirm={this.onHandleLogin} />\n      </Container>\n    )\n  }\n}\n\nfunction mapStateToProps (state) {\n  return {\n\n  }\n}\n\nfunction mapDispatchToProps (dispatch) {\n  return {\n    loginSuccess: () => dispatch(actions.loginSuccess()),\n    loginFailure: () => dispatch(actions.loginFailure())\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(LoginUser)\n"]},"metadata":{},"sourceType":"module"}