{"ast":null,"code":"var _jsxFileName = \"/Users/rafalskrzydelski/development/django/wealth_frontend/src/app/auth/components/Login/LoginUser.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as api from '../../../../api/api';\nimport { loginUrl } from '../../../../api/routes';\nimport { Container, TitleHeader } from '../styles';\nimport LoginForm from './LoginForm';\n\nclass LoginUser extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  async handleLogin(event) {\n    const onAppAuthChangeInfo = this.props.onAppAuthChangeInfo;\n    const user = await api.post(loginUrl(), this.state.credentials);\n\n    if (user.key !== undefined) {\n      localStorage.setItem('token', user.key);\n      localStorage.setItem('username', this.state.credentials.username);\n\n      if (onAppAuthChangeInfo !== undefined) {\n        onAppAuthChangeInfo();\n      }\n    } else {\n      localStorage.clear();\n    }\n\n    this.setState({\n      credentials: {\n        username: '',\n        password: '',\n        email: ''\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(TitleHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Login\"), React.createElement(LoginForm, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({});\n\nexport default connect(mapStateToProps, {})(LoginUser);","map":{"version":3,"sources":["/Users/rafalskrzydelski/development/django/wealth_frontend/src/app/auth/components/Login/LoginUser.js"],"names":["React","Component","connect","api","loginUrl","Container","TitleHeader","LoginForm","LoginUser","constructor","props","handleLogin","event","onAppAuthChangeInfo","user","post","state","credentials","key","undefined","localStorage","setItem","username","clear","setState","password","email","render","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAO,KAAKC,GAAZ,MAAqB,qBAArB;AACA,SAASC,QAAT,QAAyB,wBAAzB;AAEA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,WAAvC;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,SAAN,SAAwBP,SAAxB,CAAkC;AAChCQ,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAClB,UAAMA,KAAN;AACD;;AAED,QAAMC,WAAN,CAAmBC,KAAnB,EAA0B;AAAA,UAChBC,mBADgB,GACQ,KAAKH,KADb,CAChBG,mBADgB;AAExB,UAAMC,IAAI,GAAG,MAAMX,GAAG,CAACY,IAAJ,CAASX,QAAQ,EAAjB,EAAqB,KAAKY,KAAL,CAAWC,WAAhC,CAAnB;;AACA,QAAIH,IAAI,CAACI,GAAL,KAAaC,SAAjB,EAA4B;AAC1BC,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BP,IAAI,CAACI,GAAnC;AACAE,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiC,KAAKL,KAAL,CAAWC,WAAX,CAAuBK,QAAxD;;AACA,UAAIT,mBAAmB,KAAKM,SAA5B,EAAuC;AACrCN,QAAAA,mBAAmB;AACpB;AACF,KAND,MAMO;AACLO,MAAAA,YAAY,CAACG,KAAb;AACD;;AACD,SAAKC,QAAL,CAAc;AACZP,MAAAA,WAAW,EAAE;AAAEK,QAAAA,QAAQ,EAAE,EAAZ;AAAgBG,QAAAA,QAAQ,EAAE,EAA1B;AAA8BC,QAAAA,KAAK,EAAE;AAArC;AADD,KAAd;AAGD;;AAEDC,EAAAA,MAAM,GAAI;AACR,WACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AA7B+B;;AAgClC,MAAMC,eAAe,GAAGZ,KAAK,KAAK,EAAL,CAA7B;;AAIA,eAAed,OAAO,CAAC0B,eAAD,EAAkB,EAAlB,CAAP,CAA6BpB,SAA7B,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport * as api from '../../../../api/api'\nimport { loginUrl } from '../../../../api/routes'\n\nimport { Container, TitleHeader } from '../styles'\nimport LoginForm from './LoginForm'\n\nclass LoginUser extends Component {\n  constructor (props) {\n    super(props)\n  }\n\n  async handleLogin (event) {\n    const { onAppAuthChangeInfo } = this.props\n    const user = await api.post(loginUrl(), this.state.credentials)\n    if (user.key !== undefined) {\n      localStorage.setItem('token', user.key)\n      localStorage.setItem('username', this.state.credentials.username)\n      if (onAppAuthChangeInfo !== undefined) {\n        onAppAuthChangeInfo()\n      }\n    } else {\n      localStorage.clear()\n    }\n    this.setState({\n      credentials: { username: '', password: '', email: '' }\n    })\n  }\n\n  render () {\n    return (\n      <Container>\n        <TitleHeader>Login</TitleHeader>\n        <LoginForm />\n      </Container>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nexport default connect(mapStateToProps, {})(LoginUser)\n"]},"metadata":{},"sourceType":"module"}