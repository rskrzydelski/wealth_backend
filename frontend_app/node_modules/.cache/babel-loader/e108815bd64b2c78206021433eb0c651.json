{"ast":null,"code":"var _jsxFileName = \"/Users/rafalskrzydelski/development/django/wealth_frontend/src/app/auth/components/LoginUser.js\";\nimport React, { Component } from 'react';\nimport * as api from '../../../api/api';\nimport { loginUrl } from '../../../api/routes';\nimport { Container, TitleHeader, TextInput, Button } from './styles';\n\nconst AuthForm = props => {\n  const labels = props.labels.map(lb => {\n    return React.createElement(React.Fragment, null, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, lb.title, React.createElement(TextInput, {\n      type: lb.type,\n      name: lb.name,\n      value: lb.value,\n      onChange: lb.onChangeClb,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }));\n  });\n  return React.createElement(React.Fragment, null, React.createElement(TitleHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, props.title), labels, React.createElement(Button, {\n    onClick: props.confirmAction,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Login\"));\n};\n\nclass LoginUser extends Component {\n  constructor(props) {\n    super(props);\n    this.onHandleLogin = this.handleLogin.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {\n      credentials: {\n        username: '',\n        password: '',\n        email: ''\n      }\n    };\n  }\n\n  async onHandleLogin(event) {\n    const onAppAuthChangeInfo = this.props.onAppAuthChangeInfo;\n    const auth = await api.post(loginUrl(), this.state.credentials);\n    console.log(auth);\n    console.log(auth.token);\n    console.log(auth.user.username); // if (user.key !== undefined) {\n    // localStorage.setItem('token', user.key)\n    // localStorage.setItem('username', this.state.credentials.username)\n    // if (onAppAuthChangeInfo !== undefined) {\n    // onAppAuthChangeInfo()\n    // }\n    // } else {\n    // localStorage.clear()\n    // }\n\n    this.setState({\n      credentials: {\n        username: '',\n        password: '',\n        email: ''\n      }\n    });\n  }\n\n  handleChange(event) {\n    const cr = this.state.credentials;\n    cr[event.target.name] = event.target.value;\n    this.setState({\n      credentials: cr\n    });\n  }\n\n  render() {\n    const lbs = [{\n      title: 'Username',\n      type: 'text',\n      name: 'username',\n      value: this.state.credentials.username,\n      onChangeClb: this.handleChange\n    }, {\n      title: 'Email',\n      type: 'email',\n      name: 'email',\n      value: this.state.credentials.email,\n      onChangeClb: this.handleChange\n    }, {\n      title: 'Password',\n      type: 'password',\n      name: 'password',\n      value: this.state.credentials.password,\n      onChangeClb: this.handleChange\n    }];\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(AuthForm, {\n      title: \"Login\",\n      labels: lbs,\n      confirmAction: this.onHandleLogin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default LoginUser;","map":{"version":3,"sources":["/Users/rafalskrzydelski/development/django/wealth_frontend/src/app/auth/components/LoginUser.js"],"names":["React","Component","api","loginUrl","Container","TitleHeader","TextInput","Button","AuthForm","props","labels","map","lb","title","type","name","value","onChangeClb","confirmAction","LoginUser","constructor","onHandleLogin","handleLogin","bind","handleChange","state","credentials","username","password","email","event","onAppAuthChangeInfo","auth","post","console","log","token","user","setState","cr","target","render","lbs"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nimport * as api from '../../../api/api'\nimport { loginUrl } from '../../../api/routes'\n\nimport { Container, TitleHeader, TextInput, Button } from './styles'\n\nconst AuthForm = (props) => {\n\n  const labels = props.labels.map((lb) => {\n    return (\n      <>\n        <label>\n          {lb.title}\n          <TextInput\n            type={lb.type}\n            name={lb.name}\n            value={lb.value}\n            onChange={lb.onChangeClb}\n          />\n        </label>\n        <br />\n      </>\n    )\n  }\n  )\n\n  return (\n    <>\n      <TitleHeader>{props.title}</TitleHeader>\n      {labels}\n      <Button onClick={props.confirmAction}>Login</Button>\n    </>\n  )\n}\n\nclass LoginUser extends Component {\n  constructor (props) {\n    super(props)\n    this.onHandleLogin = this.handleLogin.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n    this.state = {\n      credentials: { username: '', password: '', email: '' }\n    }\n  }\n\n  async onHandleLogin (event) {\n    const { onAppAuthChangeInfo } = this.props\n    const auth = await api.post(loginUrl(), this.state.credentials)\n    console.log(auth)\n    console.log(auth.token)\n    console.log(auth.user.username)\n    // if (user.key !== undefined) {\n      // localStorage.setItem('token', user.key)\n      // localStorage.setItem('username', this.state.credentials.username)\n      // if (onAppAuthChangeInfo !== undefined) {\n        // onAppAuthChangeInfo()\n      // }\n    // } else {\n      // localStorage.clear()\n    // }\n    this.setState({\n      credentials: { username: '', password: '', email: '' }\n    })\n  }\n\n  handleChange (event) {\n    const cr = this.state.credentials\n    cr[event.target.name] = event.target.value\n    this.setState({ credentials: cr })\n  }\n\n  render () {\n    const lbs = [\n      {\n        title: 'Username',\n        type: 'text',\n        name: 'username',\n        value: this.state.credentials.username,\n        onChangeClb: this.handleChange\n      },\n      {\n        title: 'Email',\n        type: 'email',\n        name: 'email',\n        value: this.state.credentials.email,\n        onChangeClb: this.handleChange\n      },\n      {\n        title: 'Password',\n        type: 'password',\n        name: 'password',\n        value: this.state.credentials.password,\n        onChangeClb: this.handleChange\n      }\n    ]\n\n    return (\n      <Container>\n        <AuthForm title='Login' labels={lbs} confirmAction={this.onHandleLogin} />\n        {/* <label>\n          Username\n          <TextInput\n            type='text'\n            name='username'\n            value={this.state.credentials.username}\n            onChange={this.handleChange}\n          />\n        </label>\n        <br />\n        <label>\n          Email\n          <TextInput\n            type='email'\n            name='email'\n            value={this.state.credentials.email}\n            onChange={this.handleChange}\n          />\n        </label>\n        <br />\n        <label>\n          Password\n          <TextInput\n            type='password'\n            name='password'\n            value={this.state.credentials.password}\n            onChange={this.handleChange}\n          />\n        </label> */}\n        {/* <Button onClick={this.handleLogin}>Login</Button> */}\n      </Container>\n    )\n  }\n}\n\nexport default LoginUser\n"]},"metadata":{},"sourceType":"module"}