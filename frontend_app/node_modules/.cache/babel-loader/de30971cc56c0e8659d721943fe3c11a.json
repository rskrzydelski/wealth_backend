{"ast":null,"code":"var _jsxFileName = \"/Users/rafalskrzydelski/development/django/wealth_frontend/src/app/auth/components/LoginUser.js\";\nimport React, { Component } from 'react';\nimport * as api from '../../../api/api';\nimport { loginUrl } from '../../../api/routes';\nimport { Container, TitleHeader, TextInput, Button } from './styles';\nimport { loginLbs } from './formLabels';\n\nconst AuthForm = props => {\n  const labels = props.labels.map(lb => {\n    return React.createElement(React.Fragment, null, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, lb.title, React.createElement(TextInput, {\n      type: lb.type,\n      name: lb.name,\n      value: lb.value,\n      onChange: lb.handleChangeClb,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }));\n  });\n  return React.createElement(React.Fragment, null, React.createElement(TitleHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, props.title), labels, React.createElement(Button, {\n    onClick: props.handleConfirmAction,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, props.title));\n};\n\nclass LoginUser extends Component {\n  constructor(props) {\n    super(props);\n    this.onHandleLogin = this.onHandleLogin.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {\n      credentials: {\n        username: '',\n        password: '',\n        email: ''\n      }\n    };\n  }\n\n  async onHandleLogin(event) {\n    const onAppAuthChangeInfo = this.props.onAppAuthChangeInfo;\n    const res = await api.post(loginUrl(), this.state.credentials);\n\n    if (Boolean(res.token)) {\n      localStorage.setItem('token', res.token);\n      localStorage.setItem('username', res.user.username);\n      localStorage.setItem('email', res.user.email);\n    } else if (Boolean(res.non_field_errors)) {\n      localStorage.clear();\n      alert(res.non_field_errors);\n    }\n\n    if (onAppAuthChangeInfo !== undefined) {\n      onAppAuthChangeInfo();\n    }\n\n    this.setState({\n      credentials: {\n        username: '',\n        password: '',\n        email: ''\n      }\n    });\n  }\n\n  handleChange(event) {\n    const cr = this.state.credentials;\n    cr[event.target.name] = event.target.value;\n    this.setState({\n      credentials: cr\n    });\n  }\n\n  render() {\n    const lbs = [{\n      title: 'Username',\n      type: 'text',\n      name: 'username',\n      value: this.state.credentials.username,\n      handleChangeClb: this.handleChange\n    }, {\n      title: 'Email',\n      type: 'email',\n      name: 'email',\n      value: this.state.credentials.email,\n      handleChangeClb: this.handleChange\n    }, {\n      title: 'Password',\n      type: 'password',\n      name: 'password',\n      value: this.state.credentials.password,\n      handleChangeClb: this.handleChange\n    }];\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(AuthForm, {\n      title: \"Login\",\n      labels: lbs,\n      handleConfirmAction: this.onHandleLogin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default LoginUser;","map":{"version":3,"sources":["/Users/rafalskrzydelski/development/django/wealth_frontend/src/app/auth/components/LoginUser.js"],"names":["React","Component","api","loginUrl","Container","TitleHeader","TextInput","Button","loginLbs","AuthForm","props","labels","map","lb","title","type","name","value","handleChangeClb","handleConfirmAction","LoginUser","constructor","onHandleLogin","bind","handleChange","state","credentials","username","password","email","event","onAppAuthChangeInfo","res","post","Boolean","token","localStorage","setItem","user","non_field_errors","clear","alert","undefined","setState","cr","target","render","lbs"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAO,KAAKC,GAAZ,MAAqB,kBAArB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAEA,SAASC,SAAT,EAAoBC,WAApB,EAAiCC,SAAjC,EAA4CC,MAA5C,QAA0D,UAA1D;AACA,SAASC,QAAT,QAAyB,cAAzB;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAE1B,QAAMC,MAAM,GAAGD,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAkBC,EAAD,IAAQ;AACtC,WACE,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,EAAE,CAACC,KADN,EAEE,oBAAC,SAAD;AACE,MAAA,IAAI,EAAED,EAAE,CAACE,IADX;AAEE,MAAA,IAAI,EAAEF,EAAE,CAACG,IAFX;AAGE,MAAA,KAAK,EAAEH,EAAE,CAACI,KAHZ;AAIE,MAAA,QAAQ,EAAEJ,EAAE,CAACK,eAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,CADF;AAcD,GAfc,CAAf;AAkBA,SACE,0CACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAcR,KAAK,CAACI,KAApB,CADF,EAEGH,MAFH,EAGE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAED,KAAK,CAACS,mBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6CT,KAAK,CAACI,KAAnD,CAHF,CADF;AAOD,CA3BD;;AA6BA,MAAMM,SAAN,SAAwBnB,SAAxB,CAAkC;AAChCoB,EAAAA,WAAW,CAAEX,KAAF,EAAS;AAClB,UAAMA,KAAN;AACA,SAAKY,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKE,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE;AAAEC,QAAAA,QAAQ,EAAE,EAAZ;AAAgBC,QAAAA,QAAQ,EAAE,EAA1B;AAA8BC,QAAAA,KAAK,EAAE;AAArC;AADF,KAAb;AAGD;;AAED,QAAMP,aAAN,CAAqBQ,KAArB,EAA4B;AAAA,UAClBC,mBADkB,GACM,KAAKrB,KADX,CAClBqB,mBADkB;AAE1B,UAAMC,GAAG,GAAG,MAAM9B,GAAG,CAAC+B,IAAJ,CAAS9B,QAAQ,EAAjB,EAAqB,KAAKsB,KAAL,CAAWC,WAAhC,CAAlB;;AAEA,QAAIQ,OAAO,CAACF,GAAG,CAACG,KAAL,CAAX,EAAwB;AACtBC,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BL,GAAG,CAACG,KAAlC;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCL,GAAG,CAACM,IAAJ,CAASX,QAA1C;AACAS,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BL,GAAG,CAACM,IAAJ,CAAST,KAAvC;AACD,KAJD,MAIO,IAAIK,OAAO,CAACF,GAAG,CAACO,gBAAL,CAAX,EAAmC;AACxCH,MAAAA,YAAY,CAACI,KAAb;AACAC,MAAAA,KAAK,CAACT,GAAG,CAACO,gBAAL,CAAL;AACD;;AAED,QAAIR,mBAAmB,KAAKW,SAA5B,EAAuC;AACrCX,MAAAA,mBAAmB;AACpB;;AACD,SAAKY,QAAL,CAAc;AACZjB,MAAAA,WAAW,EAAE;AAAEC,QAAAA,QAAQ,EAAE,EAAZ;AAAgBC,QAAAA,QAAQ,EAAE,EAA1B;AAA8BC,QAAAA,KAAK,EAAE;AAArC;AADD,KAAd;AAGD;;AAEDL,EAAAA,YAAY,CAAEM,KAAF,EAAS;AACnB,UAAMc,EAAE,GAAG,KAAKnB,KAAL,CAAWC,WAAtB;AACAkB,IAAAA,EAAE,CAACd,KAAK,CAACe,MAAN,CAAa7B,IAAd,CAAF,GAAwBc,KAAK,CAACe,MAAN,CAAa5B,KAArC;AACA,SAAK0B,QAAL,CAAc;AAAEjB,MAAAA,WAAW,EAAEkB;AAAf,KAAd;AACD;;AAEDE,EAAAA,MAAM,GAAI;AACR,UAAMC,GAAG,GAAG,CACV;AACEjC,MAAAA,KAAK,EAAE,UADT;AAEEC,MAAAA,IAAI,EAAE,MAFR;AAGEC,MAAAA,IAAI,EAAE,UAHR;AAIEC,MAAAA,KAAK,EAAE,KAAKQ,KAAL,CAAWC,WAAX,CAAuBC,QAJhC;AAKET,MAAAA,eAAe,EAAE,KAAKM;AALxB,KADU,EAQV;AACEV,MAAAA,KAAK,EAAE,OADT;AAEEC,MAAAA,IAAI,EAAE,OAFR;AAGEC,MAAAA,IAAI,EAAE,OAHR;AAIEC,MAAAA,KAAK,EAAE,KAAKQ,KAAL,CAAWC,WAAX,CAAuBG,KAJhC;AAKEX,MAAAA,eAAe,EAAE,KAAKM;AALxB,KARU,EAeV;AACEV,MAAAA,KAAK,EAAE,UADT;AAEEC,MAAAA,IAAI,EAAE,UAFR;AAGEC,MAAAA,IAAI,EAAE,UAHR;AAIEC,MAAAA,KAAK,EAAE,KAAKQ,KAAL,CAAWC,WAAX,CAAuBE,QAJhC;AAKEV,MAAAA,eAAe,EAAE,KAAKM;AALxB,KAfU,CAAZ;AAwBA,WACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAC,OAAhB;AAAwB,MAAA,MAAM,EAAEuB,GAAhC;AAAqC,MAAA,mBAAmB,EAAE,KAAKzB,aAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AAnE+B;;AAsElC,eAAeF,SAAf","sourcesContent":["import React, { Component } from 'react'\n\nimport * as api from '../../../api/api'\nimport { loginUrl } from '../../../api/routes'\n\nimport { Container, TitleHeader, TextInput, Button } from './styles'\nimport { loginLbs } from './formLabels'\n\nconst AuthForm = (props) => {\n\n  const labels = props.labels.map((lb) => {\n    return (\n      <>\n        <label>\n          {lb.title}\n          <TextInput\n            type={lb.type}\n            name={lb.name}\n            value={lb.value}\n            onChange={lb.handleChangeClb}\n          />\n        </label>\n        <br />\n      </>\n    )\n  }\n  )\n\n  return (\n    <>\n      <TitleHeader>{props.title}</TitleHeader>\n      {labels}\n      <Button onClick={props.handleConfirmAction}>{props.title}</Button>\n    </>\n  )\n}\n\nclass LoginUser extends Component {\n  constructor (props) {\n    super(props)\n    this.onHandleLogin = this.onHandleLogin.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n    this.state = {\n      credentials: { username: '', password: '', email: '' }\n    }\n  }\n\n  async onHandleLogin (event) {\n    const { onAppAuthChangeInfo } = this.props\n    const res = await api.post(loginUrl(), this.state.credentials)\n\n    if (Boolean(res.token)) {\n      localStorage.setItem('token', res.token)\n      localStorage.setItem('username', res.user.username)\n      localStorage.setItem('email', res.user.email)\n    } else if (Boolean(res.non_field_errors)) {\n      localStorage.clear()\n      alert(res.non_field_errors)\n    }\n\n    if (onAppAuthChangeInfo !== undefined) {\n      onAppAuthChangeInfo()\n    }\n    this.setState({\n      credentials: { username: '', password: '', email: '' }\n    })\n  }\n\n  handleChange (event) {\n    const cr = this.state.credentials\n    cr[event.target.name] = event.target.value\n    this.setState({ credentials: cr })\n  }\n\n  render () {\n    const lbs = [\n      {\n        title: 'Username',\n        type: 'text',\n        name: 'username',\n        value: this.state.credentials.username,\n        handleChangeClb: this.handleChange\n      },\n      {\n        title: 'Email',\n        type: 'email',\n        name: 'email',\n        value: this.state.credentials.email,\n        handleChangeClb: this.handleChange\n      },\n      {\n        title: 'Password',\n        type: 'password',\n        name: 'password',\n        value: this.state.credentials.password,\n        handleChangeClb: this.handleChange\n      }\n    ]\n\n    return (\n      <Container>\n        <AuthForm title='Login' labels={lbs} handleConfirmAction={this.onHandleLogin} />\n      </Container>\n    )\n  }\n}\n\nexport default LoginUser\n"]},"metadata":{},"sourceType":"module"}