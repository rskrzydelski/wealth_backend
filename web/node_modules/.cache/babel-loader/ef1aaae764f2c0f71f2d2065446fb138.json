{"ast":null,"code":"var _jsxFileName = \"/Users/rafalskrzydelski/development/django/wealth_frontend/src/app/utils/Routes/routes.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport NavBar from '../NavBar/NavBar';\nimport history from '../history';\nimport ProtectedRoutes from './ProtectedRoutes';\nimport UnauthRedirect from './UnauthRedirect';\nimport LoginUser from '../../auth/components/LoginUser'; // import LogoutUser from '../../auth/components/LogoutUser'\n\nimport RegUser from '../../auth/components/RegUser'; // import Dashboard from '../../main/Dashboard'\n\nimport NotFound from '../../main/NotFound'; // import Gold from '../../resources/components/Gold'\n// import Silver from '../../resources/components/Silver'\n// import Cash from '../../resources/components/Cash'\n\nconst PrivateRoutes = ({\n  component: Component,\n  auth\n}) => React.createElement(Route, {\n  render: props => auth.isAuthenticated() === true ? React.createElement(Component, Object.assign({\n    auth: auth\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  })) : React.createElement(Redirect, {\n    to: {\n      pathname: '/redirect'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n});\n\nclass Routes extends Component {\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, this.props.isAuthenticated), React.createElement(Router, {\n      history: history,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/redirect\",\n      component: UnauthRedirect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(LoginUser, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/register\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(RegUser, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    })), React.createElement(Route, {\n      component: NotFound,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  auth: state.isAuthenticated\n});\n\nexport default connect(mapStateToProps, null)(Routes);","map":{"version":3,"sources":["/Users/rafalskrzydelski/development/django/wealth_frontend/src/app/utils/Routes/routes.js"],"names":["React","Component","connect","BrowserRouter","Router","Route","Switch","Redirect","NavBar","history","ProtectedRoutes","UnauthRedirect","LoginUser","RegUser","NotFound","PrivateRoutes","component","auth","props","isAuthenticated","pathname","Routes","render","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,EAAiDC,QAAjD,QAAiE,kBAAjE;AAEA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,OAAP,MAAoB,YAApB;AAEA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,OAAOC,SAAP,MAAsB,iCAAtB,C,CACA;;AACA,OAAOC,OAAP,MAAoB,+BAApB,C,CAEA;;AACA,OAAOC,QAAP,MAAqB,qBAArB,C,CAEA;AACA;AACA;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEf,SAAb;AAAwBgB,EAAAA;AAAxB,CAAD,KACpB,oBAAC,KAAD;AAAO,EAAA,MAAM,EAAEC,KAAK,IAAID,IAAI,CAACE,eAAL,OAA2B,IAA3B,GACpB,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAEF;AAAjB,KAA2BC,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADoB,GAEpB,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAE;AAAEE,MAAAA,QAAQ,EAAE;AAAZ,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF;;AAOA,MAAMC,MAAN,SAAqBpB,SAArB,CAA+B;AAC7BqB,EAAAA,MAAM,GAAI;AAER,WACE,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKJ,KAAL,CAAWC,eAAf,CADF,EAEE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAEV,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,WAAZ;AAAwB,MAAA,SAAS,EAAEE,cAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAGE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqB,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAArB,CAHF,EAIE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwB,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAxB,CAJF,EAKE,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAEG,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CAFF,CAFF,CADF;AAeD;;AAlB4B;;AAqB/B,MAAMS,eAAe,GAAGC,KAAK,KAAK;AAChCP,EAAAA,IAAI,EAAEO,KAAK,CAACL;AADoB,CAAL,CAA7B;;AAIA,eAAejB,OAAO,CAACqB,eAAD,EAAkB,IAAlB,CAAP,CAA+BF,MAA/B,CAAf","sourcesContent":["import React, { Component } from 'react'\n\nimport { connect } from 'react-redux'\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom'\n\nimport NavBar from '../NavBar/NavBar'\nimport history from '../history'\n\nimport ProtectedRoutes from './ProtectedRoutes'\nimport UnauthRedirect from './UnauthRedirect'\n\nimport LoginUser from '../../auth/components/LoginUser'\n// import LogoutUser from '../../auth/components/LogoutUser'\nimport RegUser from '../../auth/components/RegUser'\n\n// import Dashboard from '../../main/Dashboard'\nimport NotFound from '../../main/NotFound'\n\n// import Gold from '../../resources/components/Gold'\n// import Silver from '../../resources/components/Silver'\n// import Cash from '../../resources/components/Cash'\n\nconst PrivateRoutes = ({ component: Component, auth }) => (\n  <Route render={props => auth.isAuthenticated() === true\n    ? <Component auth={auth} {...props} />\n    : <Redirect to={{ pathname: '/redirect' }} />}\n  />\n)\n\nclass Routes extends Component {\n  render () {\n    \n    return (\n      <>\n        <p>{this.props.isAuthenticated}</p>\n        <Router history={history}>\n          <NavBar />\n          <Switch>\n            <Route path='/redirect' component={UnauthRedirect} />\n            {/* <PrivateRoutes path='/privateroute' auth={auth} component={ProtectedRoutes} /> */}\n            <Route path='/login'><LoginUser /></Route>\n            <Route path='/register'><RegUser /></Route>\n            <Route component={NotFound} />\n          </Switch>\n        </Router>\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  auth: state.isAuthenticated\n})\n\nexport default connect(mapStateToProps, null)(Routes)\n"]},"metadata":{},"sourceType":"module"}