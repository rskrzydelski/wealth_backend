{"ast":null,"code":"var _jsxFileName = \"/Users/rafalskrzydelski/development/django/wealth_frontend/src/app/auth/components/Login/LoginUser.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as api from '../../../../api/api';\nimport { loginUrl } from '../../../../api/routes';\nimport { Container, TitleHeader } from '../styles';\nimport LoginForm from './LoginForm';\n\nclass LoginUser extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getFormData = credentials => {\n      this.authenticateMe(credentials);\n    };\n\n    this.authenticateMe = this.authenticateMe.bind(this);\n  }\n\n  async authenticateMe(credit) {\n    const onAppAuthChangeInfo = this.props.onAppAuthChangeInfo;\n    const user = await api.post(loginUrl(), credit);\n    console.log(user); // if (user.key !== undefined) {\n    //   localStorage.setItem('token', user.key)\n    //   localStorage.setItem('username', credit.username)\n    // if (onAppAuthChangeInfo !== undefined) {\n    // onAppAuthChangeInfo()\n    // }\n    // } else {\n    // localStorage.clear()\n    // }\n  }\n\n  render() {\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(TitleHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Login\"), React.createElement(LoginForm, {\n      getFormData: this.getFormData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  const credentials = state.credentials;\n  return {\n    credit: credentials\n  };\n};\n\nexport default connect(mapStateToProps, {})(LoginUser);","map":{"version":3,"sources":["/Users/rafalskrzydelski/development/django/wealth_frontend/src/app/auth/components/Login/LoginUser.js"],"names":["React","Component","connect","api","loginUrl","Container","TitleHeader","LoginForm","LoginUser","constructor","props","getFormData","credentials","authenticateMe","bind","credit","onAppAuthChangeInfo","user","post","console","log","render","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAO,KAAKC,GAAZ,MAAqB,qBAArB;AACA,SAASC,QAAT,QAAyB,wBAAzB;AAEA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,WAAvC;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,SAAN,SAAwBP,SAAxB,CAAkC;AAChCQ,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAClB,UAAMA,KAAN;;AADkB,SAoBpBC,WApBoB,GAoBLC,WAAD,IAAiB;AAC7B,WAAKC,cAAL,CAAoBD,WAApB;AAED,KAvBmB;;AAElB,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AACD;;AAED,QAAMD,cAAN,CAAsBE,MAAtB,EAA8B;AAAA,UACpBC,mBADoB,GACI,KAAKN,KADT,CACpBM,mBADoB;AAE5B,UAAMC,IAAI,GAAG,MAAMd,GAAG,CAACe,IAAJ,CAASd,QAAQ,EAAjB,EAAqBW,MAArB,CAAnB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ,EAH4B,CAI5B;AACA;AACA;AACE;AACE;AACF;AACF;AACE;AACF;AACD;;AAODI,EAAAA,MAAM,GAAI;AACR,WACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE,oBAAC,SAAD;AAAW,MAAA,WAAW,EAAE,KAAKV,WAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AAjC+B;;AAoClC,MAAMW,eAAe,GAAGC,KAAK,IAAI;AAAA,QACvBX,WADuB,GACPW,KADO,CACvBX,WADuB;AAE/B,SAAO;AAAEG,IAAAA,MAAM,EAAEH;AAAV,GAAP;AACD,CAHD;;AAKA,eAAeV,OAAO,CAACoB,eAAD,EAAkB,EAAlB,CAAP,CAA6Bd,SAA7B,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport * as api from '../../../../api/api'\nimport { loginUrl } from '../../../../api/routes'\n\nimport { Container, TitleHeader } from '../styles'\nimport LoginForm from './LoginForm'\n\nclass LoginUser extends Component {\n  constructor (props) {\n    super(props)\n    this.authenticateMe = this.authenticateMe.bind(this)\n  }\n\n  async authenticateMe (credit) {\n    const { onAppAuthChangeInfo } = this.props\n    const user = await api.post(loginUrl(), credit)\n    console.log(user)\n    // if (user.key !== undefined) {\n    //   localStorage.setItem('token', user.key)\n    //   localStorage.setItem('username', credit.username)\n      // if (onAppAuthChangeInfo !== undefined) {\n        // onAppAuthChangeInfo()\n      // }\n    // } else {\n      // localStorage.clear()\n    // }\n  }\n\n  getFormData = (credentials) => {\n    this.authenticateMe(credentials)\n\n  }\n\n  render () {\n    return (\n      <Container>\n        <TitleHeader>Login</TitleHeader>\n        <LoginForm getFormData={this.getFormData}/>\n      </Container>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  const { credentials } = state\n  return { credit: credentials }\n}\n\nexport default connect(mapStateToProps, {})(LoginUser)\n"]},"metadata":{},"sourceType":"module"}