{"ast":null,"code":"var _jsxFileName = \"/Users/rafalskrzydelski/development/django/wealth_frontend/src/app/auth/components/LoginUser.js\";\nimport React, { Component } from 'react';\nimport * as api from '../../../api/api';\nimport { loginUrl } from '../../../api/routes';\nimport { Container } from './styles';\nimport AuthForm from './AuthFrom';\n\nclass LoginUser extends Component {\n  constructor(props) {\n    super(props);\n    this.onHandleLogin = this.onHandleLogin.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {\n      credentials: {\n        username: '',\n        password: '',\n        email: ''\n      }\n    };\n  }\n\n  async onHandleLogin(event) {\n    console.log(event);\n    const onAppAuthChangeInfo = this.props.onAppAuthChangeInfo;\n    const res = await api.post(loginUrl(), this.state.credentials);\n\n    if (Boolean(res.token)) {\n      localStorage.setItem('token', res.token);\n      localStorage.setItem('username', res.user.username);\n      localStorage.setItem('email', res.user.email);\n    } else if (Boolean(res.non_field_errors)) {\n      localStorage.clear();\n      alert(res.non_field_errors);\n    }\n\n    if (onAppAuthChangeInfo !== undefined) {\n      onAppAuthChangeInfo();\n    }\n\n    this.setState({\n      credentials: {\n        username: '',\n        password: '',\n        email: ''\n      }\n    });\n  }\n\n  render() {\n    const lbs = [{\n      title: 'Username',\n      type: 'text',\n      name: 'username',\n      value: this.state.credentials.username,\n      handleChangeClb: this.handleChange\n    }, {\n      title: 'Email',\n      type: 'email',\n      name: 'email',\n      value: this.state.credentials.email,\n      handleChangeClb: this.handleChange\n    }, {\n      title: 'Password',\n      type: 'password',\n      name: 'password',\n      value: this.state.credentials.password,\n      handleChangeClb: this.handleChange\n    }];\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(AuthForm, {\n      title: \"Login\",\n      labels: lbs,\n      handleConfirmAction: this.onHandleLogin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default LoginUser;","map":{"version":3,"sources":["/Users/rafalskrzydelski/development/django/wealth_frontend/src/app/auth/components/LoginUser.js"],"names":["React","Component","api","loginUrl","Container","AuthForm","LoginUser","constructor","props","onHandleLogin","bind","handleChange","state","credentials","username","password","email","event","console","log","onAppAuthChangeInfo","res","post","Boolean","token","localStorage","setItem","user","non_field_errors","clear","alert","undefined","setState","render","lbs","title","type","name","value","handleChangeClb"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nimport * as api from '../../../api/api'\nimport { loginUrl } from '../../../api/routes'\n\nimport { Container } from './styles'\nimport AuthForm from './AuthFrom'\n\nclass LoginUser extends Component {\n  constructor (props) {\n    super(props)\n    this.onHandleLogin = this.onHandleLogin.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n    this.state = {\n      credentials: { username: '', password: '', email: '' }\n    }\n  }\n\n  async onHandleLogin (event) {\n    console.log(event)\n    const { onAppAuthChangeInfo } = this.props\n    const res = await api.post(loginUrl(), this.state.credentials)\n\n    if (Boolean(res.token)) {\n      localStorage.setItem('token', res.token)\n      localStorage.setItem('username', res.user.username)\n      localStorage.setItem('email', res.user.email)\n    } else if (Boolean(res.non_field_errors)) {\n      localStorage.clear()\n      alert(res.non_field_errors)\n    }\n\n    if (onAppAuthChangeInfo !== undefined) {\n      onAppAuthChangeInfo()\n    }\n    this.setState({\n      credentials: { username: '', password: '', email: '' }\n    })\n  }\n\n  render () {\n    const lbs = [\n      {\n        title: 'Username',\n        type: 'text',\n        name: 'username',\n        value: this.state.credentials.username,\n        handleChangeClb: this.handleChange\n      },\n      {\n        title: 'Email',\n        type: 'email',\n        name: 'email',\n        value: this.state.credentials.email,\n        handleChangeClb: this.handleChange\n      },\n      {\n        title: 'Password',\n        type: 'password',\n        name: 'password',\n        value: this.state.credentials.password,\n        handleChangeClb: this.handleChange\n      }\n    ]\n\n    return (\n      <Container>\n        <AuthForm title='Login' labels={lbs} handleConfirmAction={this.onHandleLogin} />\n      </Container>\n    )\n  }\n}\n\nexport default LoginUser\n"]},"metadata":{},"sourceType":"module"}