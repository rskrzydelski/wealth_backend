{"ast":null,"code":"var _jsxFileName = \"/Users/rafalskrzydelski/development/django/wealth_frontend/src/app/auth/components/LoginUser.js\";\nimport React, { Component } from 'react';\nimport * as api from '../../../api/api';\nimport { loginUrl } from '../../../api/routes';\nimport { Container, TitleHeader, TextInput, Button } from './styles';\n\nconst AuthForm = props => {\n  return React.createElement(React.Fragment, null, React.createElement(TitleHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, props.title), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, props.label.title, React.createElement(TextInput, {\n    type: props.label.type,\n    name: props.label.name,\n    value: props.label.value,\n    onChange: props.onChangeClb,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  })));\n};\n\nclass LoginUser extends Component {\n  constructor(props) {\n    super(props);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {\n      credentials: {\n        username: '',\n        password: '',\n        email: ''\n      }\n    };\n  }\n\n  async handleLogin(event) {\n    const onAppAuthChangeInfo = this.props.onAppAuthChangeInfo;\n    const auth = await api.post(loginUrl(), this.state.credentials);\n    console.log(auth);\n    console.log(auth.token);\n    console.log(auth.user.username); // if (user.key !== undefined) {\n    // localStorage.setItem('token', user.key)\n    // localStorage.setItem('username', this.state.credentials.username)\n    // if (onAppAuthChangeInfo !== undefined) {\n    // onAppAuthChangeInfo()\n    // }\n    // } else {\n    // localStorage.clear()\n    // }\n\n    this.setState({\n      credentials: {\n        username: '',\n        password: '',\n        email: ''\n      }\n    });\n  }\n\n  handleChange(event) {\n    const cr = this.state.credentials;\n    cr[event.target.name] = event.target.value;\n    this.setState({\n      credentials: cr\n    });\n  }\n\n  render() {\n    const label = {\n      title: 'cos tam',\n      type: 'ccc',\n      name: 'ddd',\n      value: 'fff'\n    };\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(AuthForm, {\n      title: \"Login\",\n      onChangeClb: this.handleChange,\n      label: label,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Username\", React.createElement(TextInput, {\n      type: \"text\",\n      name: \"username\",\n      value: this.state.credentials.username,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Email\", React.createElement(TextInput, {\n      type: \"email\",\n      name: \"email\",\n      value: this.state.credentials.email,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Password\", React.createElement(TextInput, {\n      type: \"password\",\n      name: \"password\",\n      value: this.state.credentials.password,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    })), React.createElement(Button, {\n      onClick: this.handleLogin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Login\"));\n  }\n\n}\n\nexport default LoginUser;","map":{"version":3,"sources":["/Users/rafalskrzydelski/development/django/wealth_frontend/src/app/auth/components/LoginUser.js"],"names":["React","Component","api","loginUrl","Container","TitleHeader","TextInput","Button","AuthForm","props","title","label","type","name","value","onChangeClb","LoginUser","constructor","handleLogin","bind","handleChange","state","credentials","username","password","email","event","onAppAuthChangeInfo","auth","post","console","log","token","user","setState","cr","target","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nimport * as api from '../../../api/api'\nimport { loginUrl } from '../../../api/routes'\n\nimport { Container, TitleHeader, TextInput, Button } from './styles'\n\nconst AuthForm = (props) => {\n  return (\n    <>\n      <TitleHeader>{props.title}</TitleHeader>\n      <label>\n        {props.label.title}\n        <TextInput\n          type={props.label.type}\n          name={props.label.name}\n          value={props.label.value}\n          onChange={props.onChangeClb}\n        />\n      </label>\n    </>\n  )\n}\n\nclass LoginUser extends Component {\n  constructor (props) {\n    super(props)\n    this.handleLogin = this.handleLogin.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n    this.state = {\n      credentials: { username: '', password: '', email: '' }\n    }\n  }\n\n  async handleLogin (event) {\n    const { onAppAuthChangeInfo } = this.props\n    const auth = await api.post(loginUrl(), this.state.credentials)\n    console.log(auth)\n    console.log(auth.token)\n    console.log(auth.user.username)\n    // if (user.key !== undefined) {\n      // localStorage.setItem('token', user.key)\n      // localStorage.setItem('username', this.state.credentials.username)\n      // if (onAppAuthChangeInfo !== undefined) {\n        // onAppAuthChangeInfo()\n      // }\n    // } else {\n      // localStorage.clear()\n    // }\n    this.setState({\n      credentials: { username: '', password: '', email: '' }\n    })\n  }\n\n  handleChange (event) {\n    const cr = this.state.credentials\n    cr[event.target.name] = event.target.value\n    this.setState({ credentials: cr })\n  }\n\n  render () {\n    const label = {\n      title: 'cos tam',\n      type: 'ccc',\n      name: 'ddd',\n      value: 'fff'\n    }\n\n    return (\n      <Container>\n        <AuthForm title='Login' onChangeClb={this.handleChange} label={label} />\n        <label>\n          Username\n          <TextInput\n            type='text'\n            name='username'\n            value={this.state.credentials.username}\n            onChange={this.handleChange}\n          />\n        </label>\n        <br />\n        <label>\n          Email\n          <TextInput\n            type='email'\n            name='email'\n            value={this.state.credentials.email}\n            onChange={this.handleChange}\n          />\n        </label>\n        <br />\n        <label>\n          Password\n          <TextInput\n            type='password'\n            name='password'\n            value={this.state.credentials.password}\n            onChange={this.handleChange}\n          />\n        </label>\n        <Button onClick={this.handleLogin}>Login</Button>\n      </Container>\n    )\n  }\n}\n\nexport default LoginUser\n"]},"metadata":{},"sourceType":"module"}